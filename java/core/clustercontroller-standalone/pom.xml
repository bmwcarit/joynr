<!--
  #%L
  %%
  Copyright (C) 2021 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>core</artifactId>
		<groupId>io.joynr.java</groupId>
		<version>1.25.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.joynr.java.core</groupId>
	<artifactId>clustercontroller-standalone</artifactId>

	<dependencies>
		<dependency>
			<groupId>io.joynr.java.core</groupId>
			<artifactId>clustercontroller-websocket-runtime</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.core</groupId>
			<artifactId>libjoynr</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java</groupId>
			<artifactId>javaapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.common</groupId>
			<artifactId>infrastructure-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging.mqtt</groupId>
			<artifactId>hivemq-mqtt-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging.websocket</groupId>
			<artifactId>joynr-websocket-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging</groupId>
			<artifactId>messaging-common</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<excludeArtifactIds></excludeArtifactIds>
				</configuration>
				<executions>
					<!-- run analyze before unpack-dependencies to not include transitive dependencies -->
					<execution>
						<id>analyze</id>
						<phase>prepare-package</phase>
						<configuration>
							<ignoredUnusedDeclaredDependencies>
								<ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-slf4j-impl</ignoredUnusedDeclaredDependency>
							</ignoredUnusedDeclaredDependencies>
						</configuration>
					</execution>
					<!-- unpack all non-runnable files into WEB-INF/lib -->
					<execution>
						<id>unpack-dependency-info</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludes>**/*.class,**/*.xtend,**/MANIFEST.MF,**/*.xmi,**/*.properties,
								**/maven/,**/*.gif,**/*.jar,**/*.xtext,**/*.mwe2,**/*.tokens,**/*.so,
								**/*.Extensions,**/*.jnilib,**/*.dll,**/*.dtd</excludes>
							<useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
							<includeScope>compile</includeScope>
							<outputDirectory>${project.build.directory}/WEB-INF/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<!-- unpack runnable files into classes -->
					<execution>
						<id>unpack-dependency-classes</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludes>log4j2.properties</excludes>
							<includeScope>compile</includeScope>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- use ant to copy the info directory without copying over empty directories -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<configuration>
							<tasks>
								<copy todir="${project.build.directory}/classes/WEB-INF/lib/"
										includeEmptyDirs="false">
									<fileset dir="${project.build.directory}/WEB-INF/lib/" includes="**/*" />
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- zip it all together, removing some further directories that the excludes
				  from the other plugins didnt seem to be able to remove -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
					<excludes>
						<exclude>target/**/*</exclude>
						<exclude>target</exclude>
					</excludes>
					<archive>
						<manifest>
							<mainClass>io.joynr.runtime.ClusterController</mainClass>
						</manifest>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
							<key>value</key>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Build jar with complete dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>io.joynr.runtime.ClusterController</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Skip deploy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

