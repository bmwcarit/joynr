<!--
  #%L
  %%
  Copyright (C) 2021 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<groupId>io.joynr.examples</groupId>
	<artifactId>android-hello-world-consumer-binder</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<name>${project.groupId}:${project.artifactId}</name>

	<parent>
		<groupId>io.joynr.examples</groupId>
		<artifactId>android-hello-world-binder</artifactId>
		<version>1.25.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<version.plugin.antrun>1.8</version.plugin.antrun>
		<version.plugin.compiler>3.8.1</version.plugin.compiler>
		<version.gradle>5.4.1</version.gradle>
		<exec.gradle>gradlew</exec.gradle>
	</properties>

	<build>
		<plugins>
			<!-- The Gradle plugin must be built by Gradle; therefore the compilation is skipped. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.plugin.compiler}</version>
				<configuration>
					<skipMain>true</skipMain>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- We need this plugin to circumvent the issue regarding the lack of descriptor
			otherwise the build fails -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<configuration>
					<!-- see https://issues.apache.org/jira/browse/MNG-5346 -->
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>

				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<executions>
					<!-- Match the maven clean phase with the gradle clean -->
					<execution>
						<id>gradle-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${basedir}/${exec.gradle}</executable>
							<arguments>
								<argument>clean</argument>
								<argument>--info</argument>
							</arguments>
						</configuration>
					</execution>

					<!-- Match the maven compile phase with the gradle compile -->
					<execution>
						<id>gradle-build</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${basedir}/${exec.gradle}</executable>
							<arguments>
								<argument>build</argument>
								<argument>-x</argument>
								<argument>test</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- These dependencies are a clone of the ones on the build.gradle file.
		 These are just for deployment purpose only, the real dependencies are on the build.gradle file -->
	<dependencies>

		<!-- joynr has a multi-module strategy and we need to include this dependency because it needs to
		be compiled first -->

		<dependency>
			<groupId>io.joynr.android</groupId>
			<artifactId>joynr-android-binder-runtime</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

</project>
