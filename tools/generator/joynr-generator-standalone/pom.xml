<!--
  #%L
  %%
  Copyright (C) 2021 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.joynr.tools.generator</groupId>
	<artifactId>joynr-generator-standalone</artifactId>
	<packaging>jar</packaging>
	<name>${project.groupId}:${project.artifactId}</name>

	<parent>
		<groupId>io.joynr.tools</groupId>
		<artifactId>generator</artifactId>
		<version>1.25.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<joynr.generator.standalone.jar>${project.build.directory}/joynr-generator-standalone-${project.version}.jar</joynr.generator.standalone.jar>
		<joynr.generator.config.cmake.path>${project.build.directory}/scripts</joynr.generator.config.cmake.path>
	</properties>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/scripts</directory>
				<includes>
					<include>joynr-generator</include>
					<include>JoynrGeneratorConfig.cmake</include>
					<include>JoynrGeneratorConfigVersion.cmake</include>
				</includes>
				<filtering>true</filtering>
				<targetPath>${project.build.directory}/scripts</targetPath>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>analyze</id>
							<goals>
								<goal>analyze-only</goal>
							</goals>
							<configuration>
								<ignoredUnusedDeclaredDependencies>
									<ignoredUnusedDeclaredDependency>io.joynr:basemodel</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.xmlresolver:xmlresolver</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>com.google.guava:listenablefuture</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>net.jcip:jcip-annotations</ignoredUnusedDeclaredDependency>
								</ignoredUnusedDeclaredDependencies>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<!-- exclude org.eclipse.xtext.dependencies, as it is packed as
					     pom and the unpack-dependencies goal is unable to process
					     these kinds of "archives"
					-->
					<excludeArtifactIds>org.eclipse.xtext.dependencies</excludeArtifactIds>
				</configuration>
				<executions>
					<!-- unpack all non-runnable files into info -->
					<execution>
						<id>unpack-dependency-info</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludes>**/*.class,**/*.xtend,**/MANIFEST.MF,**/*.xmi,**/*.properties,
							**/maven/,**/*.gif,**/*.jar,**/*.xtext,**/*.mwe2,**/*.tokens</excludes>
							<useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
							<includeScope>compile</includeScope>
							<outputDirectory>${project.build.directory}/info</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<!-- unpack runnable files into classes -->
					<execution>
						<id>unpack-dependency-classes</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includes>**/*.class,**/*.xtend,**/*.xtext, **/*.xtextbin, **/*.tokens,**/*xmi,**/log4j2.properties</includes>
							<includeScope>compile</includeScope>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<id>load-test-franca-file</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>basemodel</includeArtifactIds>
							<outputDirectory>${project.build.directory}/model</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- use ant to copy the info directory without copying over empty directories -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<copy todir="${project.build.directory}/classes/info"
									includeEmptyDirs="false">
									<fileset dir="${project.build.directory}/info" includes="**/*" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- zip it all together, removing some further directories that the excludes
				from the other plugins didnt seem to be able to remove -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
					<excludes>
						<exclude>target/**/*</exclude>
						<exclude>target</exclude>
						<exclude>testdata/**/*</exclude>
						<exclude>testdata</exclude>
					</excludes>
					<archive>
						<manifest>
							<mainClass>io.joynr.generator.Executor</mainClass>
						</manifest>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
							<key>value</key>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>saneExecution</id>
						<phase>verify</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-jar</argument>
								<argument>${basedir}/target/joynr-generator-standalone-${project.version}.jar</argument>
								<argument>-outputPath</argument>
								<argument>${basedir}/target/standalone-gen/saneExecution</argument>
								<argument>-modelpath</argument>
								<argument>${project.build.directory}/model/joynr/Routing.fidl</argument>
								<argument>-generationLanguage</argument>
								<argument>java</argument>
								<argument>true</argument>
							</arguments>
	    				</configuration>
					</execution>
					<execution>
						<id>missingDescription</id>
						<phase>verify</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-jar</argument>
								<argument>${basedir}/target/joynr-generator-standalone-${project.version}.jar</argument>
								<argument>-outputPath</argument>
								<argument>${basedir}/target/standalone-gen/missingDescription</argument>
								<argument>-modelpath</argument>
								<argument>${basedir}/src/test/resources/MissingDescription.fidl</argument>
								<argument>-generationLanguage</argument>
								<argument>cpp</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>install-cmake-user-package-registry</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${HOME}/.cmake/packages/JoynrGenerator</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<includes>
										<include>cmake-registry-path-to-JoynrGeneratorConfig.cmake</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce</id>
						<configuration>
							<rules>
								<dependencyConvergence/>
								<banTransitiveDependencies/>
							</rules>
						</configuration>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>io.joynr</groupId>
			<artifactId>basemodel</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.joynr.tools.generator</groupId>
			<artifactId>cpp-generator</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.tools.generator</groupId>
			<artifactId>java-generator</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.tools.generator</groupId>
			<artifactId>js-generator</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.tools.generator</groupId>
			<artifactId>generator-framework</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>stringtemplate</artifactId>
			<exclusions>
				<exclusion>
					<groupId>antlr</groupId>
					<artifactId>antlr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.reload4j</groupId>
			<artifactId>reload4j</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.bcel</groupId>
			<artifactId>bcel</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>Saxon-HE</artifactId>
		</dependency>
		<dependency>
			<groupId>org.xmlresolver</groupId>
			<artifactId>xmlresolver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.xmlresolver</groupId>
			<artifactId>xmlresolver</artifactId>
			<classifier>data</classifier>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.core5</groupId>
			<artifactId>httpcore5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.core5</groupId>
			<artifactId>httpcore5-h2</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>failureaccess</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>listenablefuture</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assistedinject</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.j2objc</groupId>
			<artifactId>j2objc-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore.xmi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.compiler.apt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.compiler.tool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.contenttype</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.filesystem</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.app</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.text</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.osgi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.preferences</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.jobs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.commands</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.expressions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.registry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtend</groupId>
			<artifactId>org.eclipse.xtend.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtend</groupId>
			<artifactId>org.eclipse.xtend.lib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtend</groupId>
			<artifactId>org.eclipse.xtend.lib.macro</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.common.types</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xbase</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.franca</groupId>
			<artifactId>org.franca.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.franca</groupId>
			<artifactId>org.franca.core.dsl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.franca</groupId>
			<artifactId>org.franca.deploymodel.dsl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-analysis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-tree</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.classgraph</groupId>
			<artifactId>classgraph</artifactId>
		</dependency>
	</dependencies>
</project>
