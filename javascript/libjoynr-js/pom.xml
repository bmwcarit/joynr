<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  %%
  Copyright (C) 2011 - 2017 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>libjoynr-js</artifactId>
	<groupId>io.joynr.javascript</groupId>
	<packaging>pom</packaging>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>JOYnr JavaScript libjoynr-js</description>

	<parent>
		<groupId>io.joynr</groupId>
		<artifactId>javascript</artifactId>
		<version>1.25.0</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>io.joynr</groupId>
			<artifactId>basemodel</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/js</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/js</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/js/generated</directory>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/js/generated</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/js/generated</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
						<fileset>
							<directory>src/test/generated</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>npm:clean</id>
						<phase>clean</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>clean</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.joynr.tools.generator</groupId>
				<artifactId>joynr-generator-maven-plugin</artifactId>
				<configuration>
					<generationLanguage>javascript</generationLanguage>
					<parameter>
						<requiredModule>joynr</requiredModule>
						<anonymuousDefine>false</anonymuousDefine>
					</parameter>
				</configuration>
				<executions>
					<execution>
						<id>discovery-types</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>joynr/DiscoveryTypes.fidl</model>
							<outputPath>${basedir}/src/main/js/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>discovery</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>joynr/Discovery.fidl</model>
							<outputPath>${basedir}/src/main/js/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>routing</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>joynr/Routing.fidl</model>
							<outputPath>${basedir}/src/main/js/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>capabilitiesDirectory</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>joynr/GlobalCapabilitiesDirectory.fidl</model>
							<outputPath>${basedir}/src/main/js/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>types</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>common/Types.fidl</model>
							<outputPath>${basedir}/src/main/js/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>datatypesProxyAndProvider</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- parameter>
								<requiredModule>joynr</requiredModule>
							</parameter-->
							<model>${basedir}/model/datatypes.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>radioProxyAndProvider</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>${basedir}/model/radio.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>testProxyAndProvider</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>Test.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>testTypes</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>TestTypes.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>generate-franca-name-test-model</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>FrancaNameTest.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>generate-common-test-classes-with-package-version-1</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>TestMultipleInterfaceVersions1.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						        <addVersionTo>package</addVersionTo>
						</configuration>
					</execution>
					<execution>
						<id>generate-common-test-classes-with-package-version-2</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>TestMultipleInterfaceVersions2.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
						        <addVersionTo>comment</addVersionTo>
						</configuration>
					</execution>
					<execution>
						<id>generate-common-test-classes-with-none-version</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>TestMultipleInterfaceVersions2Unversioned.fidl</model>
							<outputPath>${basedir}/src/test/generated</outputPath>
							<addVersionTo>none</addVersionTo>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.joynr.tools.generator</groupId>
						<artifactId>js-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr</groupId>
						<artifactId>basemodel</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr</groupId>
						<artifactId>basemodel</artifactId>
						<version>${project.version}</version>
						<type>test-jar</type>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Maven eclipse plugin for better eclipse integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.wst.jsdt.core.jsNature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<!-- NOTE the license to be added to the source header files must be
				specifically (redundantly) defined below -->
			<!-- This is a shortcoming of the license-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<verbose>false</verbose>
					<addSvnKeyWords>true</addSvnKeyWords>
					<licenseName>apache_v2</licenseName>
					<roots>
						<root>.</root>
					</roots>
					<excludes>
						<exclude>jsdoc3.conf.json</exclude>
						<exclude>package.json</exclude>
						<exclude>src/main/browserify/package.json</exclude>
						<exclude>src/main/js/package.json</exclude>
						<exclude>src/main/js/lib/JsonParser.js</exclude>
						<exclude>src/test/resources/node/shutdown/package.json</exclude>
						<exclude>src/test/resources/spec/support/jasmine.json</exclude>
						<exclude>tsconfig.json</exclude>
						<exclude>jest.config.js</exclude>
						<exclude>jest.config.integration.js</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>npm-build-with-skipped-tests</id>
			<activation>
				<property>
					<!-- Tests are disabled by default
						 even if skipTests is not set -->
					<name>skipTests</name>
					<value>!false</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build:skipTests</id>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build:skip</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>npm-build-with-enabled-tests</id>
			<activation>
				<property>
					<name>skipTests</name>
					<value>false</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<!-- configuration options documentation:
							http://mojo.codehaus.org/exec-maven-plugin/exec-mojo.html -->
						<executions>
							<execution>
								<id>buildAll</id>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build:fast</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
