<!--
  #%L
  %%
  Copyright (C) 2022 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.joynr.tests.system-integration-test</groupId>
	<artifactId>sit-java-app</artifactId>
	<name>${project.groupId}:${project.artifactId}</name>

	<parent>
		<groupId>io.joynr.tests</groupId>
		<artifactId>system-integration-test</artifactId>
		<version>1.25.0</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>io.joynr.java</groupId>
			<artifactId>javaapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.core</groupId>
			<artifactId>libjoynr</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.core</groupId>
			<artifactId>libjoynr-websocket-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging</groupId>
			<artifactId>messaging-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging.websocket</groupId>
			<artifactId>joynr-websocket-common</artifactId>
		</dependency>

		<!-- Logging used in the app -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>

		<!-- Command line parsing used in the demo app -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>

	</dependencies>

	<build>
		<!--
			If a local subdirectory is used to store Franca files,
			it should be specified here as a resource
		-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- Add the generated Java and Franca files to the processing of sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>process-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/generated-java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.joynr.tools.generator</groupId>
				<artifactId>joynr-generator-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-java</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>${basedir}/../src/main/model</model>
							<generationLanguage>java</generationLanguage>
							<outputPath>${basedir}/src/main/generated-java</outputPath>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.joynr.tools.generator</groupId>
						<artifactId>java-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/generated-java</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- Build jar with complete dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
